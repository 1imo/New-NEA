10:38:42    
Invalid `prisma.user.create()` invocation in
/home/mute/Documents/js/social-social-media/back/schemas/Mutations/UserMutations.js:34:36

  31 console.log(args, "ARGS CREATE");
  32 
  33 // Create a new user in the database
→ 34 const user = await prisma.user.create(
Authentication failed against database server at `postgdb.postgres.database.azure.com`, the provided database credentials for `smmdbad112` are not valid.

Please make sure to provide valid database credentials for the database server at `postgdb.postgres.database.azure.com`. 
10:41:46    
Invalid `prisma.user.create()` invocation in
/home/mute/Documents/js/social-social-media/back/schemas/Mutations/UserMutations.js:34:36

  31 console.log(args, "ARGS CREATE");
  32 
  33 // Create a new user in the database
→ 34 const user = await prisma.user.create(
Authentication failed against database server at `postgdb.postgres.database.azure.com`, the provided database credentials for `smmdbad112` are not valid.

Please make sure to provide valid database credentials for the database server at `postgdb.postgres.database.azure.com`. 
10:46:22    firstName is not defined 
10:46:55    firstName is not defined 
10:47:03    firstName is not defined 
10:47:19    firstName is not defined 
10:47:36    firstName is not defined 
10:48:10    firstName is not defined 
10:48:37    firstName is not defined 
10:48:42    firstName is not defined 
10:53:21    this.log is not a function 
11:11:34    log is not defined 
11:12:03    log is not defined 
11:40:07    
Invalid `prisma.userData.count()` invocation in
/home/mute/Documents/js/social-social-media/back/index.js:254:40

  251 if (!session || req) {
  252 	// If no session exists or a request is provided
  253 	// Checking if the user data exists and is valid
→ 254 	const exists = await prisma.userData.count(
Can't reach database server at `postgdb.postgres.database.azure.com`:`5432`

Please make sure your database server is running at `postgdb.postgres.database.azure.com`:`5432`. 
11:40:25    
Invalid `prisma.userData.count()` invocation in
/home/mute/Documents/js/social-social-media/back/index.js:254:40

  251 if (!session || req) {
  252 	// If no session exists or a request is provided
  253 	// Checking if the user data exists and is valid
→ 254 	const exists = await prisma.userData.count(
Can't reach database server at `postgdb.postgres.database.azure.com`:`5432`

Please make sure your database server is running at `postgdb.postgres.database.azure.com`:`5432`. 
11:44:54    id is not defined 
11:44:59    id is not defined 
11:45:04    id is not defined 
11:45:08    id is not defined 
11:45:33    id is not defined 
11:45:45    id is not defined 
11:46:05    id is not defined 
11:46:12    id is not defined 
11:46:33    id is not defined 
11:46:57    id is not defined 
11:47:05    id is not defined 
11:47:35    id is not defined 
11:47:41    id is not defined 
11:47:58    id is not defined 
11:48:26    id is not defined 
11:50:21    this.log is not a function 
11:51:27    this.log is not a function 
11:51:34    this.log is not a function 
11:51:44    this.log is not a function 
11:52:22    this.log is not a function 
11:53:17    this.log is not a function 
11:54:00    this.log is not a function 
11:55:49    this.log is not a function 
11:55:56    this.log is not a function 
11:56:16    this.log is not a function 
12:26:47    io is not defined 
12:27:06    user.createPost is not a function 
12:27:24    user.createPost is not a function 
12:27:54    user.createPost is not a function 
12:29:58    user.createPost is not a function 
12:32:00    Post is not defined 
12:32:38    Post is not defined 
12:37:20    Post is not defined 
12:37:45    Post is not defined 
12:37:55    Post is not defined 
12:38:13    Post is not defined 
12:38:32    Post is not a constructor 
12:38:37    Post is not a constructor 
12:59:20    prisma is not defined 
12:59:44    prisma is not defined 
12:59:59    prisma is not defined 
13:00:34    prisma is not defined 
13:01:00    prisma is not defined 
13:01:01    prisma is not defined 
13:02:48    prisma is not defined 
13:05:10    prisma is not defined 
13:05:40    prisma is not defined 
13:06:15    prisma is not defined 
13:06:50    pthis is not defined 
13:14:39    
Invalid `this.prisma.likedPost.delete()` invocation in
/home/mute/Documents/js/social-social-media/back/classes/post.js:102:39

   99 
  100 // 0 is a falsy value, so we can use it to check if the post has been viewed
  101 if (postLiked) {
→ 102 	await this.prisma.likedPost.delete({
        where: {
          postId: 36,
          userId: "df5d9289-c685-4943-9635-9dad774dfc2c",
      ?   postId_userId?: LikedPostPostIdUserIdCompoundUniqueInput,
      ?   AND?: LikedPostWhereInput | LikedPostWhereInput[],
      ?   OR?: LikedPostWhereInput[],
      ?   NOT?: LikedPostWhereInput | LikedPostWhereInput[],
      ?   post?: PostRelationFilter | PostWhereInput,
      ?   user?: UserRelationFilter | UserWhereInput
        }
      })

Argument `where` of type LikedPostWhereUniqueInput needs at least one of `postId_userId` arguments. Available options are marked with ?. 
13:15:28    
Invalid `this.prisma.likedPost.delete()` invocation in
/home/mute/Documents/js/social-social-media/back/classes/post.js:102:39

   99 
  100 // 0 is a falsy value, so we can use it to check if the post has been viewed
  101 if (postLiked) {
→ 102 	await this.prisma.likedPost.delete({
        where: {
          AND: [
            {
              postId: 36
            },
            {
              userId: "df5d9289-c685-4943-9635-9dad774dfc2c"
            }
          ],
      ?   postId_userId?: LikedPostPostIdUserIdCompoundUniqueInput,
      ?   OR?: LikedPostWhereInput[],
      ?   NOT?: LikedPostWhereInput | LikedPostWhereInput[],
      ?   postId?: IntFilter | Int,
      ?   userId?: StringFilter | String,
      ?   post?: PostRelationFilter | PostWhereInput,
      ?   user?: UserRelationFilter | UserWhereInput
        }
      })

Argument `where` of type LikedPostWhereUniqueInput needs at least one of `postId_userId` arguments. Available options are marked with ?. 
13:16:05    this.prisma.likedPost.deleteFirst is not a function 
13:16:09    this.prisma.likedPost.deleteFirst is not a function 
13:16:11    this.prisma.likedPost.deleteFirst is not a function 
13:16:35    this.prisma.likedPost.deleteFirst is not a function 
13:16:37    this.prisma.likedPost.deleteFirst is not a function 
13:17:31    
Invalid `this.prisma.likedPost.delete()` invocation in
/home/mute/Documents/js/social-social-media/back/classes/post.js:102:39

   99 
  100 // 0 is a falsy value, so we can use it to check if the post has been viewed
  101 if (postLiked) {
→ 102 	await this.prisma.likedPost.delete({
        where: {
          postId: 36,
          userId: "df5d9289-c685-4943-9635-9dad774dfc2c",
      ?   postId_userId?: LikedPostPostIdUserIdCompoundUniqueInput,
      ?   AND?: LikedPostWhereInput | LikedPostWhereInput[],
      ?   OR?: LikedPostWhereInput[],
      ?   NOT?: LikedPostWhereInput | LikedPostWhereInput[],
      ?   post?: PostRelationFilter | PostWhereInput,
      ?   user?: UserRelationFilter | UserWhereInput
        }
      })

Argument `where` of type LikedPostWhereUniqueInput needs at least one of `postId_userId` arguments. Available options are marked with ?. 
13:39:12    sanitise is not defined 
13:39:27    sanitise is not defined 
13:39:44    sanitise is not defined 
13:39:58    sanitise is not defined 
13:40:16    sanitise is not defined 
13:40:56    sanitise is not defined 
13:41:15    sanitise is not defined 
13:41:41    sanitise is not defined 
13:41:54    chatroom.getLocation is not a function 
13:42:07    prisma is not defined 
13:43:00    prisma is not defined 
13:43:36    
Invalid `this.prisma.chatroom.findFirst()` invocation in
/home/mute/Documents/js/social-social-media/back/classes/chatroom.js:32:48

  29 
  30 console.log(users, "users");
  31 
→ 32 const chatroom = await this.prisma.chatroom.findFirst({
       where: {
         chatroomUsers: {
           every: {
             userId: {
               in: [
                 [
                   "df5d9289-c685-4943-9635-9dad774dfc2c",
                   "cd6655d1-b279-4487-bcc3-cc3892eb2e4d"
                 ]
               ]
               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
             }
           }
         }
       },
       select: {
         id: true
       }
     })

Argument `in`: Invalid value provided. Expected String or ListStringFieldRefInput, provided ((String, String)). 
13:59:31    sanitise is not defined 
13:59:48    sanitise is not defined 
13:59:57    sanitise is not defined 
14:00:01    sanitise is not defined 
14:00:18    sanitise is not defined 
14:22:27    io is not defined 
14:22:42    io is not defined 
